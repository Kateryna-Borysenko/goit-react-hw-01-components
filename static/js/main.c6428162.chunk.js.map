{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Profile","user","username","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","name","label","quantity","Statistics","title","statistics","statList","map","el","style","backgroundColor","Math","floor","random","toString","item","percentage","id","FriendListItem","isOnline","notOnline","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","slice","toUpperCase","amount","currency","App","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6428162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1JfCM\",\"avatar\":\"FriendListItem_avatar__39YKi\",\"name\":\"FriendListItem_name__3Mkg3\",\"isOnline\":\"FriendListItem_isOnline__Fa-lM\",\"notOnline\":\"FriendListItem_notOnline__1_aw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\",\"type\":\"TransactionHistory_type__2Q5st\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1lQQU\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = user => {\n  const {\n    username,\n    tag,\n    location,\n    avatar,\n    stats: { followers, views, likes },\n  } = user;\n\n  return (\n    <div className={styles.profile} key={tag}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number,\n      views: PropTypes.number,\n      likes: PropTypes.number,\n    }).isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\n// задать инлайн стиль bg вызовом ф-ции\nconst getRandomHexColor = () => {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      <ul className={styles.statList}>\n        {stats.map(el => (\n          <li\n            key={el.id}\n            style={{ backgroundColor: `${getRandomHexColor()}` }}\n            className={styles.item}\n          >\n            <span className={styles.label}>{el.label}</span>\n            <span className={styles.percentage}>{el.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }).isRequired,\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={styles.item}>\n      <span className={isOnline ? styles.isOnline : styles.notOnline}>\n        {isOnline}\n      </span>\n      <img\n        className={styles.avatar}\n        src={avatar}\n        alt=\"User avatar\"\n        width=\"48\"\n      />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(friend => (\n      <FriendListItem\n        key={friend.id}\n        name={friend.name}\n        avatar={friend.avatar}\n        isOnline={friend.isOnline}\n      />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  key: PropTypes.number,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td className={styles.type}>\n              {item.type.slice(0, 1).toUpperCase() + item.type.slice(1)}\n            </td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import Profile from 'components/Profile/Profile';\nimport Statistics from 'components/Statistics/Statistics';\nimport FriendList from 'components/FriendList/FriendList';\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\n\nimport user from 'data/user.json';\nimport data from 'data/data.json';\nimport friends from 'data/friends.json';\nimport transactions from 'data/transactions.json';\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}